# Import necessary libraries
import pandas as pd  # for handling tabular datasets
import numpy as np  # for numerical computations
from scipy import stats  # for statistical operations
import matplotlib.pyplot as plt  # for plotting
import seaborn as sns  # for advanced statistical plots

# Load dataset from GitHub URL
file_path = "https://raw.githubusercontent.com/Hamed-Ahmadinia/DASP-2025/refs/heads/main/medical_examination.csv"  # URL link to the dataset stored on GitHub

# Read the dataset into a pandas dataframe
df = pd.read_csv(file_path)  # Load the dataset as a pandas DataFrame

# Display the first few rows of the dataframe to confirm the data has been loaded correctly
print("Dataset Preview:")  # Print a label for context
print(df.head(5))  # Display the first 5 rows of the dataset

Dataset Preview:
   id    age  sex  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \
0   0  18393    2     168    62.0    110     80            1     1      0   
1   1  20228    1     156    85.0    140     90            3     1      0   
2   2  18857    1     165    64.0    130     70            3     1      0   
3   3  17623    2     169    82.0    150    100            1     1      0   
4   4  17474    1     156    56.0    100     60            1     1      0   

   alco  active  cardio  
0     0       1       0  
1     0       1       1  
2     0       0       1  
3     0       1       1  
4     0       0       0  

Exercise 1: Display Dataset Information
Question: Use df.info() to display basic information about the dataset.

# Your code here:
df.info()

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 70000 entries, 0 to 69999
Data columns (total 13 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   id           70000 non-null  int64  
 1   age          70000 non-null  int64  
 2   sex          70000 non-null  int64  
 3   height       70000 non-null  int64  
 4   weight       70000 non-null  float64
 5   ap_hi        70000 non-null  int64  
 6   ap_lo        70000 non-null  int64  
 7   cholesterol  70000 non-null  int64  
 8   gluc         70000 non-null  int64  
 9   smoke        70000 non-null  int64  
 10  alco         70000 non-null  int64  
 11  active       70000 non-null  int64  
 12  cardio       70000 non-null  int64  
dtypes: float64(1), int64(12)
memory usage: 6.9 MB

Exercise 2: Calculate Minimum and Maximum Values

Question: Calculate the minimum and maximum values for the following columns:

    "height"
    "weight"
    "ap_hi" (systolic blood pressure)
    "ap_lo" (diasblood pressure)re)

# Your code here:
# Minimum values
min_height = df['height'].min()
min_weight = df['weight'].min()
min_ap_hi = df['ap_hi'].min()
min_ap_lo = df['ap_lo'].min()

# Maximum values
max_height = df['height'].max()
max_weight = df['weight'].max()
max_ap_hi = df['ap_hi'].max()
max_ap_lo = df['ap_lo'].max()

print("Minimum Values:")
print(f"Height: {min_height}, Weight: {min_weight}, Systolic BP: {min_ap_hi}, Diastolic BP: {min_ap_lo}")
print("\nMaximum Values:")
print(f"Height: {max_height}, Weight: {max_weight}, Systolic BP: {max_ap_hi}, Diastolic BP: {max_ap_lo}")

Minimum Values:
Height: 55, Weight: 10.0, Systolic BP: -150, Diastolic BP: -70

Maximum Values:
Height: 250, Weight: 200.0, Systolic BP: 16020, Diastolic BP: 11000

Exercise 3: Compute Measures of Central Tendency

Question: Calculate the mean, median, and mode for the specified columns:

    Mean: Compute the mean of the "weight" column.
    Median: Compute the median of the "ap_hi" (systolic blood pressure) column.
    Mode: Compute the mode of the "gender" column.

# Your code here:
# Mean of weight
mean_weight = df['weight'].mean()

# Median of ap_hi
median_ap_hi = df['ap_hi'].median()

# Mode of gender (assuming 'sex' is the gender column)
mode_gender = df['sex'].mode()[0]

print(f"Mean Weight: {mean_weight}")
print(f"Median Systolic BP: {median_ap_hi}")
print(f"Mode of Gender: {mode_gender}")

Mean Weight: 74.20569
Median Systolic BP: 120.0
Mode of Gender: 1

Exercise 4: Compute Quantiles and Interquartile Range (IQR)

Question: Compute the Q1, Q2 (median), and Q3 for the "cholesterol" column and calculate the Interquartile Range (IQR).
# Your code here:
# Quantiles
Q1 = df['cholesterol'].quantile(0.25)
Q2 = df['cholesterol'].median()
Q3 = df['cholesterol'].quantile(0.75)

# IQR
IQR = Q3 - Q1

print(f"Q1: {Q1}, Q2 (Median): {Q2}, Q3: {Q3}")
print(f"IQR: {IQR}")

Q1: 1.0, Q2 (Median): 1.0, Q3: 2.0
IQR: 1.0

Exercise 5: Grouped Analysis by Gender

Question: Calculate the mean of the "weight" column grouped by "gender".
# Your code here:
mean_weight_by_gender = df.groupby('sex')['weight'].mean()
print(mean_weight_by_gender)

sex
1    72.565902
2    77.258565
3    69.818182
Name: weight, dtype: float64
